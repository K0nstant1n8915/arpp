#include <Wire.h>
#include <MPU6050.h>
#include <LedControl.h>

// Инициализация MPU6050 и LedControl
MPU6050 mpu;
LedControl lc = LedControl(12, 10, 11, 1); // Пины: DIN = 12, CLK = 10, CS = 11

// Массивы для различных направлений стрелок
byte arrowUp[8][8] = {
  {0, 0, 0, 1, 1, 0, 0, 0},
  {0, 0, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1},
  {0, 0, 1, 1, 1, 1, 0, 0},
  {0, 0, 0, 1, 1, 0, 0, 0},
  {0, 0, 0, 0, 1, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
};

byte arrowDown[8][8] = {
  {0, 0, 0, 0, 0, 0, 0, 0},
  {0, 0, 0, 1, 1, 0, 0, 0},
  {0, 0, 1, 1, 1, 1, 0, 0},
  {0, 1, 1, 1, 1, 1, 1, 0},
  {1, 1, 1, 1, 1, 1, 1, 1},
  {0, 1, 1, 1, 1, 1, 0, 0},
  {0, 0, 1, 1, 1, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
};

byte arrowLeft[8][8] = {
  {0, 0, 0, 1, 0, 0, 0, 0},
  {0, 0, 1, 1, 0, 0, 0, 0},
  {0, 1, 1, 1, 0, 0, 0, 0},
  {1, 1, 1, 1, 1, 0, 0, 0},
  {0, 1, 1, 1, 1, 0, 0, 0},
  {0, 0, 1, 1, 0, 0, 0, 0},
  {0, 0, 0, 1, 0, 0, 0, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
};

byte arrowRight[8][8] = {
  {0, 0, 0, 0, 0, 1, 0, 0},
  {0, 0, 0, 1, 1, 0, 0, 0},
  {0, 0, 0, 1, 1, 1, 0, 0},
  {0, 0, 0, 1, 1, 1, 1, 0},
  {0, 0, 0, 0, 1, 1, 1, 1},
  {0, 0, 0, 0, 0, 1, 1, 0},
  {0, 0, 0, 0, 0, 0, 1, 0},
  {0, 0, 0, 0, 0, 0, 0, 0}
};

void setup() {
  Wire.begin();
  mpu.initialize();
  lc.shutdown(0, false); // Включаем дисплей
  lc.setIntensity(0, 8);  // Яркость матрицы
  lc.clearDisplay(0);     // Очистка дисплея
}

void loop() {
  // Чтение значений акселерометра
  int ax = mpu.getAccelerationX();
  int ay = mpu.getAccelerationY();

  // Условие для отображения стрелок в зависимости от направления
  if (ay > 10000) {
    // Показать стрелку вверх
    displayArrow(arrowUp);
  } else if (ay < -10000) {
    // Показать стрелку вниз
    displayArrow(arrowDown);
  } else if (ax > 10000) {
    // Показать стрелку влево
    displayArrow(arrowLeft);
  } else if (ax < -10000) {
    // Показать стрелку вправо
    displayArrow(arrowRight);
  } else {
    // Если акселерометр не двигается, очистить дисплей
    lc.clearDisplay(0);
  }

  delay(100);
}

void displayArrow(byte arrow[8][8]) {
  for (int row = 0; row < 8; row++) {
    byte rowData = 0;
    for (int col = 0; col < 8; col++) {
      rowData |= (arrow[row][col] << col); // Собираем данные для строки
    }
    lc.setRow(0, row, rowData); // Отображаем строку на дисплее
  }
}
